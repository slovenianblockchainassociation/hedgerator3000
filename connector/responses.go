package connector

import "time"

type Wallet struct {
	Account          int64     `json:"account"`
	Currency         string    `json:"currency"`
	PrevDeposited    int64     `json:"prevDeposited,omitempty"`
	PrevWithdrawn    int64     `json:"prevWithdrawn,omitempty"`
	PrevTransferIn   int64     `json:"prevTransferIn,omitempty"`
	PrevTransferOut  int64     `json:"prevTransferOut,omitempty"`
	PrevAmount       int64     `json:"prevAmount,omitempty"`
	PrevTimestamp    time.Time `json:"prevTimestamp,omitempty"`
	DeltaDeposited   int64     `json:"deltaDeposited,omitempty"`
	DeltaWithdrawn   int64     `json:"deltaWithdrawn,omitempty"`
	DeltaTransferIn  int64     `json:"deltaTransferIn,omitempty"`
	DeltaTransferOut int64     `json:"deltaTransferOut,omitempty"`
	DeltaAmount      int64     `json:"deltaAmount,omitempty"`
	Deposited        int64     `json:"deposited,omitempty"`
	Withdrawn        int64     `json:"withdrawn,omitempty"`
	TransferIn       int64     `json:"transferIn,omitempty"`
	TransferOut      int64     `json:"transferOut,omitempty"`
	Amount           int64     `json:"amount,omitempty"`
	PendingCredit    int64     `json:"pendingCredit,omitempty"`
	PendingDebit     int64     `json:"pendingDebit,omitempty"`
	ConfirmedDebit   int64     `json:"confirmedDebit,omitempty"`
	Timestamp        time.Time `json:"timestamp,omitempty"`
	Addr             string    `json:"addr,omitempty"`
	Script           string    `json:"script,omitempty"`
	WithdrawalLock   []string  `json:"withdrawalLock,omitempty"`
}

type Position struct {
	Account              int64     `json:"account"`
	Symbol               string    `json:"symbol"`
	Currency             string    `json:"currency"`
	Underlying           string    `json:"underlying,omitempty"`
	QuoteCurrency        string    `json:"quoteCurrency,omitempty"`
	Commission           float64   `json:"commission,omitempty"`
	InitMarginReq        float64   `json:"initMarginReq,omitempty"`
	MaintMarginReq       float64   `json:"maintMarginReq,omitempty"`
	RiskLimit            int64     `json:"riskLimit,omitempty"`
	Leverage             float64   `json:"leverage,omitempty"`
	CrossMargin          bool      `json:"crossMargin,omitempty"`
	DeleveragePercentile float64   `json:"deleveragePercentile,omitempty"`
	RebalancedPnl        int64     `json:"rebalancedPnl,omitempty"`
	PrevRealisedPnl      int64     `json:"prevRealisedPnl,omitempty"`
	PrevUnrealisedPnl    int64     `json:"prevUnrealisedPnl,omitempty"`
	PrevClosePrice       float64   `json:"prevClosePrice,omitempty"`
	OpeningTimestamp     time.Time `json:"openingTimestamp,omitempty"`
	OpeningQty           int64     `json:"openingQty,omitempty"`
	OpeningCost          int64     `json:"openingCost,omitempty"`
	OpeningComm          int64     `json:"openingComm,omitempty"`
	OpenOrderBuyQty      int64     `json:"openOrderBuyQty,omitempty"`
	OpenOrderBuyCost     int64     `json:"openOrderBuyCost,omitempty"`
	OpenOrderBuyPremium  int64     `json:"openOrderBuyPremium,omitempty"`
	OpenOrderSellQty     int64     `json:"openOrderSellQty,omitempty"`
	OpenOrderSellCost    int64     `json:"openOrderSellCost,omitempty"`
	OpenOrderSellPremium int64     `json:"openOrderSellPremium,omitempty"`
	ExecBuyQty           int64     `json:"execBuyQty,omitempty"`
	ExecBuyCost          int64     `json:"execBuyCost,omitempty"`
	ExecSellQty          int64     `json:"execSellQty,omitempty"`
	ExecSellCost         int64     `json:"execSellCost,omitempty"`
	ExecQty              int64     `json:"execQty,omitempty"`
	ExecCost             int64     `json:"execCost,omitempty"`
	ExecComm             int64     `json:"execComm,omitempty"`
	CurrentTimestamp     time.Time `json:"currentTimestamp,omitempty"`
	CurrentQty           int64     `json:"currentQty,omitempty"`
	CurrentCost          int64     `json:"currentCost,omitempty"`
	CurrentComm          int64     `json:"currentComm,omitempty"`
	RealisedCost         int64     `json:"realisedCost,omitempty"`
	UnrealisedCost       int64     `json:"unrealisedCost,omitempty"`
	GrossOpenCost        int64     `json:"grossOpenCost,omitempty"`
	GrossOpenPremium     int64     `json:"grossOpenPremium,omitempty"`
	GrossExecCost        int64     `json:"grossExecCost,omitempty"`
	IsOpen               bool      `json:"isOpen,omitempty"`
	MarkPrice            float64   `json:"markPrice,omitempty"`
	MarkValue            int64     `json:"markValue,omitempty"`
	RiskValue            int64     `json:"riskValue,omitempty"`
	HomeNotional         float64   `json:"homeNotional,omitempty"`
	ForeignNotional      float64   `json:"foreignNotional,omitempty"`
	PosState             string    `json:"posState,omitempty"`
	PosCost              int64     `json:"posCost,omitempty"`
	PosCost2             int64     `json:"posCost2,omitempty"`
	PosCross             int64     `json:"posCross,omitempty"`
	PosInit              int64     `json:"posInit,omitempty"`
	PosComm              int64     `json:"posComm,omitempty"`
	PosLoss              int64     `json:"posLoss,omitempty"`
	PosMargin            int64     `json:"posMargin,omitempty"`
	PosMaint             int64     `json:"posMaint,omitempty"`
	PosAllowance         int64     `json:"posAllowance,omitempty"`
	TaxableMargin        int64     `json:"taxableMargin,omitempty"`
	InitMargin           int64     `json:"initMargin,omitempty"`
	MaintMargin          int64     `json:"maintMargin,omitempty"`
	SessionMargin        int64     `json:"sessionMargin,omitempty"`
	TargetExcessMargin   int64     `json:"targetExcessMargin,omitempty"`
	VarMargin            int64     `json:"varMargin,omitempty"`
	RealisedGrossPnl     int64     `json:"realisedGrossPnl,omitempty"`
	RealisedTax          int64     `json:"realisedTax,omitempty"`
	RealisedPnl          int64     `json:"realisedPnl,omitempty"`
	UnrealisedGrossPnl   int64     `json:"unrealisedGrossPnl,omitempty"`
	LongBankrupt         int64     `json:"longBankrupt,omitempty"`
	ShortBankrupt        int64     `json:"shortBankrupt,omitempty"`
	TaxBase              int64     `json:"taxBase,omitempty"`
	IndicativeTaxRate    float64   `json:"indicativeTaxRate,omitempty"`
	IndicativeTax        int64     `json:"indicativeTax,omitempty"`
	UnrealisedTax        int64     `json:"unrealisedTax,omitempty"`
	UnrealisedPnl        int64     `json:"unrealisedPnl,omitempty"`
	UnrealisedPnlPcnt    float64   `json:"unrealisedPnlPcnt,omitempty"`
	UnrealisedRoePcnt    float64   `json:"unrealisedRoePcnt,omitempty"`
	SimpleQty            float64   `json:"simpleQty,omitempty"`
	SimpleCost           float64   `json:"simpleCost,omitempty"`
	SimpleValue          float64   `json:"simpleValue,omitempty"`
	SimplePnl            float64   `json:"simplePnl,omitempty"`
	SimplePnlPcnt        float64   `json:"simplePnlPcnt,omitempty"`
	AvgCostPrice         float64   `json:"avgCostPrice,omitempty"`
	AvgEntryPrice        float64   `json:"avgEntryPrice,omitempty"`
	BreakEvenPrice       float64   `json:"breakEvenPrice,omitempty"`
	MarginCallPrice      float64   `json:"marginCallPrice,omitempty"`
	LiquidationPrice     float64   `json:"liquidationPrice,omitempty"`
	BankruptPrice        float64   `json:"bankruptPrice,omitempty"`
	Timestamp            time.Time `json:"timestamp,omitempty"`
	LastPrice            float64   `json:"lastPrice,omitempty"`
	LastValue            int64     `json:"lastValue,omitempty"`
}

type Order struct {
	OrderID               string    `json:"orderID"`
	ClOrdID               string    `json:"clOrdID,omitempty"`
	ClOrdLinkID           string    `json:"clOrdLinkID,omitempty"`
	Account               float32   `json:"account,omitempty"`
	Symbol                string    `json:"symbol,omitempty"`
	Side                  string    `json:"side,omitempty"`
	SimpleOrderQty        float64   `json:"simpleOrderQty,omitempty"`
	OrderQty              float32   `json:"orderQty,omitempty"`
	Price                 float64   `json:"price,omitempty"`
	DisplayQty            float32   `json:"displayQty,omitempty"`
	StopPx                float64   `json:"stopPx,omitempty"`
	PegOffsetValue        float64   `json:"pegOffsetValue,omitempty"`
	PegPriceType          string    `json:"pegPriceType,omitempty"`
	Currency              string    `json:"currency,omitempty"`
	SettlCurrency         string    `json:"settlCurrency,omitempty"`
	OrdType               string    `json:"ordType,omitempty"`
	TimeInForce           string    `json:"timeInForce,omitempty"`
	ExecInst              string    `json:"execInst,omitempty"`
	ContingencyType       string    `json:"contingencyType,omitempty"`
	ExDestination         string    `json:"exDestination,omitempty"`
	OrdStatus             string    `json:"ordStatus,omitempty"`
	Triggered             string    `json:"triggered,omitempty"`
	WorkingIndicator      bool      `json:"workingIndicator,omitempty"`
	OrdRejReason          string    `json:"ordRejReason,omitempty"`
	SimpleLeavesQty       float64   `json:"simpleLeavesQty,omitempty"`
	LeavesQty             float32   `json:"leavesQty,omitempty"`
	SimpleCumQty          float64   `json:"simpleCumQty,omitempty"`
	CumQty                float32   `json:"cumQty,omitempty"`
	AvgPx                 float64   `json:"avgPx,omitempty"`
	MultiLegReportingType string    `json:"multiLegReportingType,omitempty"`
	Text                  string    `json:"text,omitempty"`
	TransactTime          time.Time `json:"transactTime,omitempty"`
	Timestamp             time.Time `json:"timestamp,omitempty"`
}

type OrderBookL2 struct {
	Symbol string  `json:"symbol"`
	Id     float32 `json:"id"`
	Side   string  `json:"side"`
	Size   float64 `json:"size,omitempty"`
	Price  float64 `json:"price,omitempty"`
}
